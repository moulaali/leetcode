import java.util.*;

/**

Given an array A[] of n numbers and another number x, the task is to check whether or not there exist two elements in A[] whose sum is exactly x. 

Examples: 

Input: arr[] = {0, -1, 2, -3, 1}, x= -2
Output: Yes
Explanation:  If we calculate the sum of the output,1 + (-3) = -2
Input: arr[] = {1, -2, 1, 0, 5}, x = 0
Output: No

 */
class Solution {

  public static void main(String[] args) {
    // int[] a = {1, -2, 1, 0, 5};
    // int target = 0;
    
    // findPair(a, target);
    int[] b = {0, -1, 2, -3, 1};
    findPair(b, -2);
  }

  static void findPairBruteForce(int[] a, int target) {
    for (int i = 0; i < a.length; i++) {
      for (int j = i + 1; j < a.length; j++) {
        if (a[i] + a[j] == target) {
          System.out.println("Found pair " + a[i] + " " + a[j]);
          return;
        }
      }
    }
  
    System.out.println("Pair not found");
  }

  static void findPair(int[] a, int target) {
    Map<Integer, Boolean> m = new HashMap<>();

    
    for (int i = 0; i < a.length; i++) {
      System.out.println("Checking for " + a[i]);
      
      if (m.containsKey(target - a[i])) {
        System.out.println("Found pair " + a[i] + " " + (target - a[i]));
        return;
      }

      m.put(a[i], true);
    }
  
    System.out.println("Pair not found");
  }

}
